import asyncio
import logging
import sqlite3
from datetime import datetime
from aiogram import Dispatcher, Bot, types, F
from aiogram.filters.command import Command
import requests

bot = Bot(token='7630689498:AAG3HIYLI45_c1CACOQWrUcl4bSZOTimyeE')
logging.basicConfig(level=logging.INFO)
dp = Dispatcher()
token_API = '60b38f9ab0abb04092db9e20c61e3f20'


def init_db():
    conn = sqlite3.connect('weather_bot.db')
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS user_requests (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            city TEXT,
            temp INTEGER,
            request_time TIMESTAMP
        )
    ''')
    conn.commit()
    conn.close()


@dp.message(Command('start'))
async def cmd_start(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, –∏ —è –≤–µ—Ä–Ω—É —Ç–µ–±–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.\n\n"
        "–ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é:\n"
        "1. –ù–∞–∂–º–∏ –Ω–∞ —Å–∫—Ä–µ–ø–∫—É (–≤–ª–æ–∂–µ–Ω–∏—è)\n"
        "2. –í—ã–±–µ—Ä–∏ '–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è'\n"
        "3. –í—ã–±–µ—Ä–∏ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ—é —Ç–µ–∫—É—â—É—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é' –∏–ª–∏ —É–∫–∞–∂–∏ –º–µ—Å—Ç–æ –Ω–∞ –∫–∞—Ä—Ç–µ")

@dp.message(F.location)
async def handle_location(message: types.Message):
    location = message.location
    lat = location.latitude
    lon = location.longitude
    response = requests.get(f'https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={token_API}').json()
    city = response['name']
    temp = int(response['main']['temp']) - 273

    conn = sqlite3.connect('weather_bot.db')
    cursor = conn.cursor()
    cursor.execute('''
                   INSERT INTO user_requests (user_id, city, temperature, request_time)
        VALUES (?, ?, ?, ?)
                   ''', (message.from_user.id, city, temp, datetime.now()))
    conn.commit()
    conn.close()
    description = response['weather'][0]['description']
    humidity = response['main']['humidity']
    feels_like = int(response['main']['feels_like'])-273
    wind_speed = response['wind']['speed']
    temp_min = int(response['main']['temp_min']) - 273
    temp_max = int(response['main']['temp_max']) - 273
    weather_report = (
            f"   <b>–ü–æ–≥–æ–¥–∞ –≤ {city}</b>\n\n"
            f"üå° <b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)\n"
            f"üíß <b>–í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {humidity}%\n"
            f"üå¨ <b>–í–µ—Ç–µ—Ä —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é:</b> {wind_speed} –º/—Å\n"
            f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {description}\n\n"
            f"üå° <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {temp_min}¬∞C\n"
            f"üå° <b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {temp_max}¬∞C\n"
            f"<i>–û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M %d.%m.%Y')}</i>"

        )
    await message.answer(weather_report, parse_mode='HTML')

async def main():
    init_db()
    print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())